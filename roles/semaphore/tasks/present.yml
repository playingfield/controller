- name: Install packages
  ansible.builtin.package:
    name:
      - ansible-core
      - psmisc
      - python3.12-devel
      - python3.12-pip
      - python3.12-pip-wheel
      - tar
      - zip
    state: present

- name: Create semaphore user
  ansible.builtin.user:
    name: semaphore
    comment: SemaphoreUI
    uid: 1001
    generate_ssh_key: true
    ssh_key_type: ed25519
    ssh_key_passphrase: "{{ ssh_passphrase }}"
    system: true

- name: Enable SSH access
  ansible.builtin.copy:
    remote_src: true
    src: /home/semaphore/.ssh/id_ed25519.pub
    dest: /home/semaphore/.ssh/authorized_keys
    owner: semaphore
    group: semaphore
    mode: '0600'

- name: Find Semaphore release
  when: semaphore_download_url is not defined
  block:

    - name: Get Semaphore Release info from Github
      ansible.builtin.uri:
        url: https://api.github.com/repos/semaphoreui/semaphore/releases/latest
        return_content: true
        body_format: json
      register: _sem_rel

    - name: Set semaphore_download_url
      ansible.builtin.set_fact:
        semaphore_download_url: "{{ semaphore_releases_url }}/{{ _sem_rel.json.name }}/semaphore_{{ _sem_rel.json.name[1:] }}_linux_amd64.tar.gz"

- name: Install Semaphore binary
  when: semaphore_download_binary | bool
  block:

    - name: Download semaphore
      ansible.builtin.get_url:
        url: "{{ semaphore_download_url }}"
        dest: /tmp/semaphore.tar.gz
        mode: '0755'

    - name: Extract semaphore
      ansible.builtin.unarchive:
        src: /tmp/semaphore.tar.gz
        dest: /tmp
        mode: '0755'
        remote_src: true

    - name: Copy semaphore to /usr/bin/
      ansible.builtin.copy:
        src: /tmp/semaphore
        dest: /usr/bin/semaphore
        owner: root
        group: semaphore
        mode: '0755'
        remote_src: true
  always:
    - name: Remove files
      ansible.builtin.file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - semaphore
        - semaphore.tag.gz

- name: Create config directory
  ansible.builtin.file:
    path: /etc/semaphore/
    state: directory
    owner: semaphore
    group: semaphore
    mode: '0750'

- name: Copy requirements
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /home/semaphore/
    owner: semaphore
    group: semaphore
    mode: '0640'
  loop:
    - requirements.txt
    - requirements.yml

- name: Install requirements for semaphore user
  become: true
  become_user: semaphore
  ansible.builtin.pip:
    requirements: '/home/semaphore/requirements.txt'
    executable: /usr/bin/pip3.12
    extra_args: '--user'
    state: present

- name: Install collections
  become: true
  become_user: semaphore
  ansible.builtin.command:
    cmd: ansible-galaxy collection install --upgrade -r /home/semaphore/requirements.yml
  changed_when: true

- name: Check if env file exists
  ansible.builtin.stat:
    path: /etc/semaphore/env
  register: env_file

- name: Deploy env file if not exists
  when: not env_file.stat.exists
  ansible.builtin.template:
    src: env.j2
    dest: /etc/semaphore/.env
    owner: semaphore
    group: semaphore
    mode: '0640'
  notify: Restart semaphore

- name: Add Semaphore Config
  ansible.builtin.template:
    src: "{{ semaphore_config_path }}"
    dest: "/etc/semaphore/config.json"
    mode: '0640'
    owner: semaphore
    group: semaphore
  become: true
  notify:
    - Restart semaphore

- name: Create semaphore service
  ansible.builtin.template:
    src: semaphore.service.j2
    dest: /usr/lib/systemd/system/semaphore.service
    owner: root
    group: semaphore
    mode: '0644'
  notify: Restart semaphore

- name: Enable semaphore service
  ansible.builtin.systemd:
    name: semaphore.service
    enabled: true
    daemon_reload: true
  notify: Restart semaphore
